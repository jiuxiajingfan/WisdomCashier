server:
  port: 8088
  servlet:
    context-path: /client
spring:
  datasource:
    username: user
    password: password
    url: jdbc:mysql://**.**.**.**:****/wisdomcashier?useSSL=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #druid 数据源专有配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true

    #配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
    #如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority
    #则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  redis:
    host: **.**.**.**
    port: ****
    password: ****
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器连接端口
    lettuce:
      pool:
        max-active: 100 # 连接池最大连接数（使用负值表示没有限制） 太小可能出现connection.PoolExcelption
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
        max-wait: 1000 # 连接池最大阻塞等待时间（使用负值表示没有限制）
      shutdown-timeout: 100    # 关闭超时时间
  mail:
    host: smtp.163.com
    protocol: smtp
    default-encoding: utf-8
    username: **.**.**.**:****
    password: **.**.**.**:****
    test-connection: true

swagger:
  enable: true

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    #自动峰驼
    map-underscore-to-camel-case: true
  mapper-locations: classpath*:com/li/wisdomcashier/base/mapper/xml/*.xml


aj:
  captcha:
    jigsaw: classpath:images/code
    # 验证码类型default两种都实例化。
    type: blockPuzzle
    # 校验滑动拼图允许误差偏移量(默认5像素)
    slip-offset: 5
    # aes加密坐标开启或者禁用(true|false)
    aes-status: true
    # 滑动干扰项(0/1/2)
    interference-options: 2
    history-data-clear-enable: false
    # 接口请求次数一分钟限制是否开启 true|false
    req-frequency-limit-enable: true
    # 验证失败5次，get接口锁定
    req-get-lock-limit: 5
    # 验证失败后，锁定时间间隔,s
    req-get-lock-seconds: 360
    # get接口一分钟内请求数限制
    req-get-minute-limit: 30
    # check接口一分钟内请求数限制
    req-check-minute-limit: 60
    # verify接口一分钟内请求数限制
    req-verify-minute-limit: 60
    cache-type=local: local

tokenTime: 14400

#jwt拦截url
permission-config:
  perms:
    #    swaggwr放行
    - key: /v2/api-docs
      value:  anon
    - key: /webjars/**
      value: anon
    - key: /swagger-resources/**
      value: anon
    - key: /swagger-ui.html
      value: anon
    - key: /doc.html
      value: anon

    - key: /**
      value: jwt

goodsAPI:
  app_id: **.**.**.**:****
  app_secret: **.**.**.**:****

minio:
  endpoint: **.**.**.**:****
  accessKey: **.**.**.**:****
  secretKey: **.**.**.**:****
  bucketName: **.**.**.**:****

alipay:
  appCertPath: appCertPublicKey_appid.crt
  # 证书方式回调解析数据使用
  alipayCertPath: alipayCertPublicKey_RSA2.crt
  alipayRootCertPath: alipayRootCert.crt
  test: 2022年3月27日15:48:07
  appId: **.**.**.**:****
  # 密钥方式回调解析数据使用
  alipaypublickey: **.**.**.**:****
    # 应用公钥
  publicKey: **.**.**.**:****
    # 支付宝私钥
  privateKey: **.**.**.**:****
  serverUrl: https://openapi.alipaydev.com/gateway.do
  format: json
  charset: utf-8
  signType: RSA2
  notifyUrl: http://test.test.top/cli/ali/pay/notify
  version: 1.0
  identityType: ALIPAY_LOGON_ID

